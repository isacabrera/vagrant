- name: Configure DBServer
  hosts: dbserver
  become: true

  vars:
    - root_password: isabel
    - db_username: isabel
    - db_password: isabel
    - database: datadb
    - ansible_host: 192.168.56.11
    - mysql_bind_address: localhost
    - mysql_port: 3306
    - LOCAL_PROJECT_HOME: "./"

  tasks:

    - name: Run Apt Update
      ansible.builtin.apt:
        update_cache: true

    - name: Install Python and Pip for Ansible Script
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip

    - name: Install Python Module for Ansible MariaDB Automation
      ansible.builtin.pip:
        name:
          - PyMySQL

    - name: MariaDB Installation
      ansible.builtin.apt:
        name:
          - mariadb-server
          - mariadb-client
          - python3-mysqldb
          
    - name: add [mysqld] in my.cnf
      ansible.builtin.lineinfile:
        path: /etc/mysql/my.cnf
        regexp: "\\[mysqld]"
        line: "[mysqld]"
        state: present

    - name: Edit my.cnf
      ansible.builtin.lineinfile:
        path: /etc/mysql/my.cnf
        regexp: 'bind-address = 0.0.0.0'
        line: 'bind-address = 0.0.0.0'
        state: present

    - name: Restart and Enable MariaDB
      ansible.builtin.service:
        name: mysql
        state: restarted
        enabled: true

#    - name: Delete Anonymous user
#      community.mysql.mysql_user:
#        name: ''
#       host: localhost
#       state: absent
#       login_unix_socket: /run/mysqld/mysqld.sock

    - name: Set Root Password with defined variable
      community.mysql.mysql_user:
        name: "root"
        password: "{{ root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
      with_items:
        - localhost

    - name: Create database datadb
      community.mysql.mysql_db:
        name: "{{ database }}"
        login_user: root
        login_password: "{{ root_password }}"
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Copy database dump file
      ansible.builtin.copy:
        src: "{{ LOCAL_PROJECT_HOME }}dump-myproject.sql"
        dest: /tmp/dump-myproject.sql


    - name: Create user {{ db_username }} for database {{ database }}
      community.mysql.mysql_user:
        name: "{{ db_username }}"
        password: "{{ db_password }}"
        priv: "*.*:ALL,GRANT"
        login_user: root
        login_password: "{{ root_password }}"
        login_host: client
        login_unix_socket: /run/mysqld/mysqld.sock
       # state: present
       # append_privs: yes
       # host: "%" 

    - name: Restore database
      community.mysql.mysql_db:
        name: myproject
        state: import
        target: /tmp/dump-myproject.sql
        login_user: root
        login_password: "{{ root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
      become: true

    - name: Restore database2
      mysql_db:
        name: all
        state: import
        target: /tmp/dump-myproject.sql
        login_user: root
        login_password: "{{ root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
      tags:
        - table

    - name: Ensure the table is created
      community.mysql.mysql_db:
        name: "{{ database }}"
        state: present
        login_user: "{{ db_username }}"
        login_password: "{{ db_password }}"
        login_host: 192.168.56.10
        login_unix_socket: /run/mysqld/mysqld.sock
      become: true
      
      
